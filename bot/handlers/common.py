from aiogram import types, F, Router
from aiogram.filters.command import Command
from bot.keyboards.keyboards import kb1
from bot.utils.random_fox import fox

router = Router()


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start –∏–ª–∏ —Ç–µ–∫—Å—Ç–∞ "–°—Ç–∞—Ä—Ç"
@router.message(Command("start"))
@router.message(F.text == "–°—Ç–∞—Ä—Ç")
async def cmd_start(message: types.Message):
    name = message.chat.first_name
    await message.answer(f"–ü—Ä–∏–≤–µ—Ç {name}! –Ø –ø—Ä–æ—Å—Ç–æ–π Telegram –±–æ—Ç.", reply_markup=kb1)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /stop –∏–ª–∏ —Ç–µ–∫—Å—Ç–∞ "–°—Ç–æ–ø"
@router.message(Command("stop"))
@router.message(F.text == "–°—Ç–æ–ø")
async def cmd_stop(message: types.Message):
    name = message.chat.first_name
    await message.answer(f"–ü–æ–∫–∞, {name}!", reply_markup=kb1)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /fox –∏–ª–∏ —Ç–µ–∫—Å—Ç–∞ "–ü–æ–∫–∞–∂–∏ –ª–∏—Å—É"
@router.message(Command("fox"))
@router.message(Command("–ª–∏—Å–∞"))
@router.message(F.text.lower() == "–ø–æ–∫–∞–∂–∏ –ª–∏—Å—É")
async def cmd_fox(message: types.Message):
    name = message.chat.first_name
    img_fox = fox()
    await message.answer(f"–î–µ—Ä–∂–∏ –ª–∏—Å—É, {name}!")
    await message.answer_photo(photo=img_fox)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (—ç—Ö–æ)
@router.message()
async def echo(message: types.Message):
    name = message.chat.first_name
    text = message.text.lower()

    greetings = ["–ø—Ä–∏–≤–µ—Ç", "–ø—Ä–∏–≤–∞", "–∑–¥–∞—Ä–æ–≤–∞", "hi", "–∫—É", "–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π", "–¥–æ–±—Ä—ã–π –¥–µ–Ω—å", "–¥–æ–±—Ä–æ–µ —É—Ç—Ä–æ", "–¥–æ–±—Ä—ã–π –≤–µ—á–µ—Ä",
                 "—Å–∞–ª—é—Ç", "—Ö–∞–π", "–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é"]
    if text in greetings:
        await message.answer(f"–ü—Ä–∏–≤–µ—Ç, {name}!")
        return

    exceptions = ["–ø–æ–∫–∞", "–±–±", "–¥–æ —Å–≤–∏–¥–∞–Ω–∏—è", "—É–≤–∏–¥–∏–º—Å—è", "–≤—Å–µ–≥–æ —Ö–æ—Ä–æ—à–µ–≥–æ", "—Å–ø–æ–∫–æ–π–Ω–æ–π –Ω–æ—á–∏", "–¥–æ –≤—Å—Ç—Ä–µ—á–∏", "–ø—Ä–æ—â–∞–π",
                  "–¥–æ —Å–∫–æ—Ä–æ–≥–æ", "–¥–æ —Å–∫–æ—Ä–æ–π –≤—Å—Ç—Ä–µ—á–∏", "–≤—Å–µ–≥–æ –¥–æ–±—Ä–æ–≥–æ", "–≤—Å–µ–≥–æ –Ω–∞–∏–ª—É—á—à–µ–≥–æ"]
    if text in exceptions:
        await message.answer(f"–ü–æ–∫–∞, {name}!")
        return
    elif text == "—Å—Ç–æ–ø":
        await message.answer("–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.", reply_markup=types.ReplyKeyboardRemove())
    elif text == "–∏–Ω—Ñ–æ":
        await message.answer("–≠—Ç–æ –ø—Ä–æ—Å—Ç–æ–π –±–æ—Ç –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç—ã —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π.")
    elif text == "—Ç—ã –∫—Ç–æ?" or text == "—Ç—ã –∫—Ç–æ":
        await message.answer_dice(emoji="üéØ")
    elif text == "–∑–∞–∫—Ä—ã—Ç—å":
        await message.answer("–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–∫—Ä—ã—Ç–∞.", reply_markup=types.ReplyKeyboardRemove())
    else:
        await message.answer(f"–í—ã —Å–∫–∞–∑–∞–ª–∏: {message.text}")
